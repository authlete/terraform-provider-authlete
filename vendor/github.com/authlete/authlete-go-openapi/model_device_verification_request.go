/*
Authlete API

Authlete API Document. 

API version: 2.2.19
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authlete

import (
	"encoding/json"
)

// DeviceVerificationRequest struct for DeviceVerificationRequest
type DeviceVerificationRequest struct {
	// A user code.
	UserCode string `json:"userCode"`
}

// NewDeviceVerificationRequest instantiates a new DeviceVerificationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceVerificationRequest(userCode string) *DeviceVerificationRequest {
	this := DeviceVerificationRequest{}
	this.UserCode = userCode
	return &this
}

// NewDeviceVerificationRequestWithDefaults instantiates a new DeviceVerificationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceVerificationRequestWithDefaults() *DeviceVerificationRequest {
	this := DeviceVerificationRequest{}
	return &this
}

// GetUserCode returns the UserCode field value
func (o *DeviceVerificationRequest) GetUserCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserCode
}

// GetUserCodeOk returns a tuple with the UserCode field value
// and a boolean to check if the value has been set.
func (o *DeviceVerificationRequest) GetUserCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserCode, true
}

// SetUserCode sets field value
func (o *DeviceVerificationRequest) SetUserCode(v string) {
	o.UserCode = v
}

func (o DeviceVerificationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["userCode"] = o.UserCode
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceVerificationRequest struct {
	value *DeviceVerificationRequest
	isSet bool
}

func (v NullableDeviceVerificationRequest) Get() *DeviceVerificationRequest {
	return v.value
}

func (v *NullableDeviceVerificationRequest) Set(val *DeviceVerificationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceVerificationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceVerificationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceVerificationRequest(val *DeviceVerificationRequest) *NullableDeviceVerificationRequest {
	return &NullableDeviceVerificationRequest{value: val, isSet: true}
}

func (v NullableDeviceVerificationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceVerificationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


