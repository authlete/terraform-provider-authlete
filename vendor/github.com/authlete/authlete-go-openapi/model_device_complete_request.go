/*
Authlete API

Authlete API Document. 

API version: 2.2.19
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authlete

import (
	"encoding/json"
)

// DeviceCompleteRequest struct for DeviceCompleteRequest
type DeviceCompleteRequest struct {
	// A user code. 
	UserCode string `json:"userCode"`
	// The result of the end-user authentication and authorization. One of the following. Details are described in the description. 
	Result string `json:"result"`
	// The subject (= unique identifier) of the end-user. 
	Subject string `json:"subject"`
	// The value of the sub claim that should be used in the ID token. 
	Sub *string `json:"sub,omitempty"`
	// The time at which the end-user was authenticated. Its value is the number of seconds from `1970-01-01`. 
	AuthTime *string `json:"authTime,omitempty"`
	// The reference of the authentication context class which the end-user authentication satisfied. 
	Acr *string `json:"acr,omitempty"`
	// Additional claims which will be embedded in the ID token. 
	Claims *string `json:"claims,omitempty"`
	// The extra properties associated with the access token. 
	Properties []Property `json:"properties,omitempty"`
	// Scopes to replace the scopes specified in the original device authorization request with. When nothing is specified for this parameter, replacement is not performed. 
	Scopes []string `json:"scopes,omitempty"`
	// The description of the error. If this optional request parameter is given, its value is used as the value of the `error_description` property, but it is used only when the result is not `AUTHORIZED`. To comply with the specification strictly, the description must not include characters outside the set `%x20-21 / %x23-5B / %x5D-7E`. 
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// The URI of a document which describes the error in detail. This corresponds to the `error_uri` property in the response to the client. 
	ErrorUri *string `json:"errorUri,omitempty"`
	// JSON that represents additional JWS header parameters for ID tokens.
	IdHeaderParams *string `json:"idHeaderParams,omitempty"`
}

// NewDeviceCompleteRequest instantiates a new DeviceCompleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceCompleteRequest(userCode string, result string, subject string) *DeviceCompleteRequest {
	this := DeviceCompleteRequest{}
	this.UserCode = userCode
	this.Result = result
	this.Subject = subject
	return &this
}

// NewDeviceCompleteRequestWithDefaults instantiates a new DeviceCompleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceCompleteRequestWithDefaults() *DeviceCompleteRequest {
	this := DeviceCompleteRequest{}
	return &this
}

// GetUserCode returns the UserCode field value
func (o *DeviceCompleteRequest) GetUserCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserCode
}

// GetUserCodeOk returns a tuple with the UserCode field value
// and a boolean to check if the value has been set.
func (o *DeviceCompleteRequest) GetUserCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserCode, true
}

// SetUserCode sets field value
func (o *DeviceCompleteRequest) SetUserCode(v string) {
	o.UserCode = v
}

// GetResult returns the Result field value
func (o *DeviceCompleteRequest) GetResult() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *DeviceCompleteRequest) GetResultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *DeviceCompleteRequest) SetResult(v string) {
	o.Result = v
}

// GetSubject returns the Subject field value
func (o *DeviceCompleteRequest) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *DeviceCompleteRequest) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *DeviceCompleteRequest) SetSubject(v string) {
	o.Subject = v
}

// GetSub returns the Sub field value if set, zero value otherwise.
func (o *DeviceCompleteRequest) GetSub() string {
	if o == nil || o.Sub == nil {
		var ret string
		return ret
	}
	return *o.Sub
}

// GetSubOk returns a tuple with the Sub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompleteRequest) GetSubOk() (*string, bool) {
	if o == nil || o.Sub == nil {
		return nil, false
	}
	return o.Sub, true
}

// HasSub returns a boolean if a field has been set.
func (o *DeviceCompleteRequest) HasSub() bool {
	if o != nil && o.Sub != nil {
		return true
	}

	return false
}

// SetSub gets a reference to the given string and assigns it to the Sub field.
func (o *DeviceCompleteRequest) SetSub(v string) {
	o.Sub = &v
}

// GetAuthTime returns the AuthTime field value if set, zero value otherwise.
func (o *DeviceCompleteRequest) GetAuthTime() string {
	if o == nil || o.AuthTime == nil {
		var ret string
		return ret
	}
	return *o.AuthTime
}

// GetAuthTimeOk returns a tuple with the AuthTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompleteRequest) GetAuthTimeOk() (*string, bool) {
	if o == nil || o.AuthTime == nil {
		return nil, false
	}
	return o.AuthTime, true
}

// HasAuthTime returns a boolean if a field has been set.
func (o *DeviceCompleteRequest) HasAuthTime() bool {
	if o != nil && o.AuthTime != nil {
		return true
	}

	return false
}

// SetAuthTime gets a reference to the given string and assigns it to the AuthTime field.
func (o *DeviceCompleteRequest) SetAuthTime(v string) {
	o.AuthTime = &v
}

// GetAcr returns the Acr field value if set, zero value otherwise.
func (o *DeviceCompleteRequest) GetAcr() string {
	if o == nil || o.Acr == nil {
		var ret string
		return ret
	}
	return *o.Acr
}

// GetAcrOk returns a tuple with the Acr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompleteRequest) GetAcrOk() (*string, bool) {
	if o == nil || o.Acr == nil {
		return nil, false
	}
	return o.Acr, true
}

// HasAcr returns a boolean if a field has been set.
func (o *DeviceCompleteRequest) HasAcr() bool {
	if o != nil && o.Acr != nil {
		return true
	}

	return false
}

// SetAcr gets a reference to the given string and assigns it to the Acr field.
func (o *DeviceCompleteRequest) SetAcr(v string) {
	o.Acr = &v
}

// GetClaims returns the Claims field value if set, zero value otherwise.
func (o *DeviceCompleteRequest) GetClaims() string {
	if o == nil || o.Claims == nil {
		var ret string
		return ret
	}
	return *o.Claims
}

// GetClaimsOk returns a tuple with the Claims field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompleteRequest) GetClaimsOk() (*string, bool) {
	if o == nil || o.Claims == nil {
		return nil, false
	}
	return o.Claims, true
}

// HasClaims returns a boolean if a field has been set.
func (o *DeviceCompleteRequest) HasClaims() bool {
	if o != nil && o.Claims != nil {
		return true
	}

	return false
}

// SetClaims gets a reference to the given string and assigns it to the Claims field.
func (o *DeviceCompleteRequest) SetClaims(v string) {
	o.Claims = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *DeviceCompleteRequest) GetProperties() []Property {
	if o == nil || o.Properties == nil {
		var ret []Property
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompleteRequest) GetPropertiesOk() ([]Property, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *DeviceCompleteRequest) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []Property and assigns it to the Properties field.
func (o *DeviceCompleteRequest) SetProperties(v []Property) {
	o.Properties = v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *DeviceCompleteRequest) GetScopes() []string {
	if o == nil || o.Scopes == nil {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompleteRequest) GetScopesOk() ([]string, bool) {
	if o == nil || o.Scopes == nil {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *DeviceCompleteRequest) HasScopes() bool {
	if o != nil && o.Scopes != nil {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *DeviceCompleteRequest) SetScopes(v []string) {
	o.Scopes = v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *DeviceCompleteRequest) GetErrorDescription() string {
	if o == nil || o.ErrorDescription == nil {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompleteRequest) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || o.ErrorDescription == nil {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *DeviceCompleteRequest) HasErrorDescription() bool {
	if o != nil && o.ErrorDescription != nil {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *DeviceCompleteRequest) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetErrorUri returns the ErrorUri field value if set, zero value otherwise.
func (o *DeviceCompleteRequest) GetErrorUri() string {
	if o == nil || o.ErrorUri == nil {
		var ret string
		return ret
	}
	return *o.ErrorUri
}

// GetErrorUriOk returns a tuple with the ErrorUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompleteRequest) GetErrorUriOk() (*string, bool) {
	if o == nil || o.ErrorUri == nil {
		return nil, false
	}
	return o.ErrorUri, true
}

// HasErrorUri returns a boolean if a field has been set.
func (o *DeviceCompleteRequest) HasErrorUri() bool {
	if o != nil && o.ErrorUri != nil {
		return true
	}

	return false
}

// SetErrorUri gets a reference to the given string and assigns it to the ErrorUri field.
func (o *DeviceCompleteRequest) SetErrorUri(v string) {
	o.ErrorUri = &v
}

// GetIdHeaderParams returns the IdHeaderParams field value if set, zero value otherwise.
func (o *DeviceCompleteRequest) GetIdHeaderParams() string {
	if o == nil || o.IdHeaderParams == nil {
		var ret string
		return ret
	}
	return *o.IdHeaderParams
}

// GetIdHeaderParamsOk returns a tuple with the IdHeaderParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCompleteRequest) GetIdHeaderParamsOk() (*string, bool) {
	if o == nil || o.IdHeaderParams == nil {
		return nil, false
	}
	return o.IdHeaderParams, true
}

// HasIdHeaderParams returns a boolean if a field has been set.
func (o *DeviceCompleteRequest) HasIdHeaderParams() bool {
	if o != nil && o.IdHeaderParams != nil {
		return true
	}

	return false
}

// SetIdHeaderParams gets a reference to the given string and assigns it to the IdHeaderParams field.
func (o *DeviceCompleteRequest) SetIdHeaderParams(v string) {
	o.IdHeaderParams = &v
}

func (o DeviceCompleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["userCode"] = o.UserCode
	}
	if true {
		toSerialize["result"] = o.Result
	}
	if true {
		toSerialize["subject"] = o.Subject
	}
	if o.Sub != nil {
		toSerialize["sub"] = o.Sub
	}
	if o.AuthTime != nil {
		toSerialize["authTime"] = o.AuthTime
	}
	if o.Acr != nil {
		toSerialize["acr"] = o.Acr
	}
	if o.Claims != nil {
		toSerialize["claims"] = o.Claims
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.Scopes != nil {
		toSerialize["scopes"] = o.Scopes
	}
	if o.ErrorDescription != nil {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	if o.ErrorUri != nil {
		toSerialize["errorUri"] = o.ErrorUri
	}
	if o.IdHeaderParams != nil {
		toSerialize["idHeaderParams"] = o.IdHeaderParams
	}
	return json.Marshal(toSerialize)
}

type NullableDeviceCompleteRequest struct {
	value *DeviceCompleteRequest
	isSet bool
}

func (v NullableDeviceCompleteRequest) Get() *DeviceCompleteRequest {
	return v.value
}

func (v *NullableDeviceCompleteRequest) Set(val *DeviceCompleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceCompleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceCompleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceCompleteRequest(val *DeviceCompleteRequest) *NullableDeviceCompleteRequest {
	return &NullableDeviceCompleteRequest{value: val, isSet: true}
}

func (v NullableDeviceCompleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceCompleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


