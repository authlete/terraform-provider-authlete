/*
Authlete API

Authlete API Document. 

API version: 2.2.19
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authlete

import (
	"encoding/json"
)

// ClientAuthorizationUpdateRequest struct for ClientAuthorizationUpdateRequest
type ClientAuthorizationUpdateRequest struct {
	// The subject (= unique identifier) of the end-user who has granted authorization to the client application. 
	Subject string `json:"subject"`
	// An array of new scopes. Optional. If a non-null value is given, the new scopes are set to all existing access tokens. If an API call is made using `\"Content-Type: application/x-www-form-urlencoded\"`, scope names listed in this request parameter should be delimited by spaces (after form encoding, spaces are converted to `+`).
	Scopes []string `json:"scopes,omitempty"`
}

// NewClientAuthorizationUpdateRequest instantiates a new ClientAuthorizationUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientAuthorizationUpdateRequest(subject string) *ClientAuthorizationUpdateRequest {
	this := ClientAuthorizationUpdateRequest{}
	this.Subject = subject
	return &this
}

// NewClientAuthorizationUpdateRequestWithDefaults instantiates a new ClientAuthorizationUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientAuthorizationUpdateRequestWithDefaults() *ClientAuthorizationUpdateRequest {
	this := ClientAuthorizationUpdateRequest{}
	return &this
}

// GetSubject returns the Subject field value
func (o *ClientAuthorizationUpdateRequest) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *ClientAuthorizationUpdateRequest) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *ClientAuthorizationUpdateRequest) SetSubject(v string) {
	o.Subject = v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *ClientAuthorizationUpdateRequest) GetScopes() []string {
	if o == nil || o.Scopes == nil {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAuthorizationUpdateRequest) GetScopesOk() ([]string, bool) {
	if o == nil || o.Scopes == nil {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *ClientAuthorizationUpdateRequest) HasScopes() bool {
	if o != nil && o.Scopes != nil {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *ClientAuthorizationUpdateRequest) SetScopes(v []string) {
	o.Scopes = v
}

func (o ClientAuthorizationUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["subject"] = o.Subject
	}
	if o.Scopes != nil {
		toSerialize["scopes"] = o.Scopes
	}
	return json.Marshal(toSerialize)
}

type NullableClientAuthorizationUpdateRequest struct {
	value *ClientAuthorizationUpdateRequest
	isSet bool
}

func (v NullableClientAuthorizationUpdateRequest) Get() *ClientAuthorizationUpdateRequest {
	return v.value
}

func (v *NullableClientAuthorizationUpdateRequest) Set(val *ClientAuthorizationUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableClientAuthorizationUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableClientAuthorizationUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientAuthorizationUpdateRequest(val *ClientAuthorizationUpdateRequest) *NullableClientAuthorizationUpdateRequest {
	return &NullableClientAuthorizationUpdateRequest{value: val, isSet: true}
}

func (v NullableClientAuthorizationUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientAuthorizationUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


