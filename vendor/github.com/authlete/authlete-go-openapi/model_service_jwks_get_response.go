/*
Authlete API

Authlete API Document. 

API version: 2.2.19
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authlete

import (
	"encoding/json"
)

// ServiceJwksGetResponse struct for ServiceJwksGetResponse
type ServiceJwksGetResponse struct {
	// An array of [JWK](https://datatracker.ietf.org/doc/html/rfc7517)s.
	Keys []map[string]interface{} `json:"keys,omitempty"`
}

// NewServiceJwksGetResponse instantiates a new ServiceJwksGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceJwksGetResponse() *ServiceJwksGetResponse {
	this := ServiceJwksGetResponse{}
	return &this
}

// NewServiceJwksGetResponseWithDefaults instantiates a new ServiceJwksGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceJwksGetResponseWithDefaults() *ServiceJwksGetResponse {
	this := ServiceJwksGetResponse{}
	return &this
}

// GetKeys returns the Keys field value if set, zero value otherwise.
func (o *ServiceJwksGetResponse) GetKeys() []map[string]interface{} {
	if o == nil || o.Keys == nil {
		var ret []map[string]interface{}
		return ret
	}
	return o.Keys
}

// GetKeysOk returns a tuple with the Keys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceJwksGetResponse) GetKeysOk() ([]map[string]interface{}, bool) {
	if o == nil || o.Keys == nil {
		return nil, false
	}
	return o.Keys, true
}

// HasKeys returns a boolean if a field has been set.
func (o *ServiceJwksGetResponse) HasKeys() bool {
	if o != nil && o.Keys != nil {
		return true
	}

	return false
}

// SetKeys gets a reference to the given []map[string]interface{} and assigns it to the Keys field.
func (o *ServiceJwksGetResponse) SetKeys(v []map[string]interface{}) {
	o.Keys = v
}

func (o ServiceJwksGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Keys != nil {
		toSerialize["keys"] = o.Keys
	}
	return json.Marshal(toSerialize)
}

type NullableServiceJwksGetResponse struct {
	value *ServiceJwksGetResponse
	isSet bool
}

func (v NullableServiceJwksGetResponse) Get() *ServiceJwksGetResponse {
	return v.value
}

func (v *NullableServiceJwksGetResponse) Set(val *ServiceJwksGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceJwksGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceJwksGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceJwksGetResponse(val *ServiceJwksGetResponse) *NullableServiceJwksGetResponse {
	return &NullableServiceJwksGetResponse{value: val, isSet: true}
}

func (v NullableServiceJwksGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceJwksGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


